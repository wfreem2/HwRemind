{
	"info": {
		"_postman_id": "79527e43-5f44-425f-b271-614563da2851",
		"name": "HWReminder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21650957"
	},
	"item": [
		{
			"name": "Registration Flows",
			"item": [
				{
					"name": "Register_HappyPath",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"const email = pm.variables.replaceIn('{{$randomEmail}}')\r",
									"const pswd = pm.variables.replaceIn('{{$randomPassword}}')\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"email\", email);\r",
									"pm.collectionVariables.set(\"pswd\", pswd);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const json = pm.response.json()\r",
									"\r",
									"pm.test(\"Validate Access Token Included\", function(){\r",
									"    pm.expect(json).to.have.property('accessToken')\r",
									"})\r",
									"\r",
									"pm.test(\"Validate Access Token Included\", function(){\r",
									"    pm.expect(json).to.have.property('refreshToken')\r",
									"})\r",
									"\r",
									"pm.collectionVariables.set(\"accessToken\", json.accessToken)\r",
									"pm.collectionVariables.set(\"refreshToken\", json.refreshToken)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{pswd}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register_Bad_Body_Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register_Existing_Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{pswd}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication Flows",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Login_HappyPath",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const json = pm.response.json()\r",
											"\r",
											"pm.test(\"Validate Access Token Included\", function(){\r",
											"    pm.expect(json).to.have.property('accessToken')\r",
											"})\r",
											"\r",
											"pm.test(\"Validate Access Token Included\", function(){\r",
											"    pm.expect(json).to.have.property('refreshToken')\r",
											"})\r",
											"\r",
											"if(json.accessToken && json.refreshToken){\r",
											"    pm.collectionVariables.set(\"accessToken\", json.accessToken)\r",
											"    pm.collectionVariables.set(\"refreshToken\", json.refreshToken)\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{pswd}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/authenticate",
									"host": [
										"{{url}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login_WrongPswd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{pswd}}nothterightpswd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/authenticate",
									"host": [
										"{{url}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login_NonExistent_Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}nottherightemail\",\r\n    \"password\": \"{{pswd}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/authenticate",
									"host": [
										"{{url}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Refresh",
					"item": [
						{
							"name": "Refresh_HappyPath",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const json = pm.response.json()\r",
											"\r",
											"pm.test(\"Validate Access Token Included\", function(){\r",
											"    pm.expect(json).to.have.property('accessToken')\r",
											"})\r",
											"\r",
											"pm.test(\"Validate Access Token Included\", function(){\r",
											"    pm.expect(json).to.have.property('refreshToken')\r",
											"})\r",
											"\r",
											"if(json.accessToken && json.refreshToken){\r",
											"    pm.collectionVariables.set(\"accessToken\", json.accessToken)\r",
											"    pm.collectionVariables.set(\"refreshToken\", json.refreshToken)\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/authenticate/refresh",
									"host": [
										"{{url}}"
									],
									"path": [
										"authenticate",
										"refresh"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh_Token_Not_Exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{expiredAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}doesnotexist\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/authenticate/refresh",
									"host": [
										"{{url}}"
									],
									"path": [
										"authenticate",
										"refresh"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Revoke",
					"item": [
						{
							"name": "Revoke_HappyPath",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{accessToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/authenticate/revoke",
									"host": [
										"{{url}}"
									],
									"path": [
										"authenticate",
										"revoke"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke_Expired_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{expiredAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{expiredAccessToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/authenticate/revoke",
									"host": [
										"{{url}}"
									],
									"path": [
										"authenticate",
										"revoke"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "User Flows",
			"item": [
				{
					"name": "Create User",
					"item": [
						{
							"name": "Create_User_HappyPath",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const json = pm.response.json()\r",
											"\r",
											"pm.test(\"User Id Included\", function(){\r",
											"    pm.expect(json).to.have.property('id')\r",
											"})\r",
											"\r",
											"pm.collectionVariables.set(\"userId\", json.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"schoolName\": \"{{$randomStreetName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/users/add",
									"host": [
										"{{url}}"
									],
									"path": [
										"users",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create_User_Existing_User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"schoolName\": \"{{$randomStreetName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/users/add",
									"host": [
										"{{url}}"
									],
									"path": [
										"users",
										"add"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get User",
					"item": [
						{
							"name": "Get_User_HappyPath",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/users/me",
									"host": [
										"{{url}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update User",
					"item": [
						{
							"name": "Update_User_HappyPath",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"schoolName\": \"{{$randomStreetName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/users",
									"host": [
										"{{url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete User",
					"item": [
						{
							"name": "Delete_User_HappyPath",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/users",
									"host": [
										"{{url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Assignment Flows",
			"item": [
				{
					"name": "Get_My_Assignments_HappyPath",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/assignments/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"assignments",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Assignment_HappyPath",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json()\r",
									"\r",
									"pm.test(\"Assignment Id Included\", function(){\r",
									"    pm.expect(json).to.have.property('id')\r",
									"})\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"assignmentId\", json.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFileName}}\",\r\n    \"description\": \"{{$randomJobDescriptor}}\",\r\n    \"dueAt\": \"{{$isoTimestamp}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/assignments/add",
							"host": [
								"{{url}}"
							],
							"path": [
								"assignments",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Assignment_HappyPath Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/assignments/{{assignmentId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"assignments",
								"{{assignmentId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "expiredAccessToken",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjUiLCJpYXQiOiIxNjY0OTg1MzE0IiwiZXhwIjoxNjY0OTg1NDk0LCJpc3MiOiJod3JlbWluZCIsImF1ZCI6ImxvY2FsaG9zdCJ9.6pHc8wlxr6rYD9GzNL1V31MFTrddsHuq1KoT4ht1Ros",
			"type": "string"
		},
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "pswd",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "assignmentId",
			"value": "",
			"type": "string"
		}
	]
}